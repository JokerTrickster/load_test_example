/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.7.0-SNAPSHOT
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://dev-frog-api.jokertrickster.com";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.
let tkn = "TODO_EDIT_THE_TKN";

export default function() {
    group("/v0.1/auth/logout", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/auth/logout`;
            let params = {headers: {"tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/rooms/ready", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/rooms/ready`;
            // TODO: edit the parameters of the request body.
            let body = {"playerState": "string", "roomID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.patch(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/game/card/discard", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/game/card/discard`;
            // TODO: edit the parameters of the request body.
            let body = {"cardID": "integer", "cardState": "string", "roomID": "integer", "userID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.put(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/game/next-turn", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/game/next-turn`;
            // TODO: edit the parameters of the request body.
            let body = {"playerState": "string", "roomID": "integer", "turnNumber": "integer", "userID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.put(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/users", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/users`;
            let params = {headers: {"tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.get(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/rooms/out", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/rooms/out`;
            // TODO: edit the parameters of the request body.
            let body = {"roomID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.put(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/game/loan", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/game/loan`;
            // TODO: edit the parameters of the request body.
            let body = {"loanCardID": "integer", "loanUserID": "integer", "roomID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/auth/signin", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/auth/signin`;
            // TODO: edit the parameters of the request body.
            let body = {"email": "ryan@gmail.com", "password": "asdasd123"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/game/win-request", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/game/win-request`;
            // TODO: edit the parameters of the request body.
            let body = {"roomID": "integer", "score": "integer", "userID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/rooms", () => {
        let pageSize = 'TODO_EDIT_THE_PAGESIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let page = 'TODO_EDIT_THE_PAGE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/rooms?page=${page}&pageSize=${pageSize}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/users/{userID}", () => {
        let userID = 'TODO_EDIT_THE_USERID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/users/${userID}?userID=${userID}`;
            let params = {headers: {"tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.get(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/auth/signup", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/auth/signup`;
            // TODO: edit the parameters of the request body.
            let body = {"email": "ryan3@gmail.com", "name": "ryan", "password": "asdasd123"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 201
            });
        }
    });

    group("/v0.1/game/dora", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/game/dora`;
            // TODO: edit the parameters of the request body.
            let body = {"cardColor": "string", "cardID": "integer", "cardName": "string", "cardState": "string", "roomID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.put(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/rooms/user", () => {
        let roomID = 'TODO_EDIT_THE_ROOMID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/rooms/user?RoomID=${RoomID}`;
            let params = {headers: {"tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.get(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/auth/reissue", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/auth/reissue`;
            // TODO: edit the parameters of the request body.
            let body = {"accessToken": "string", "refreshToken": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.put(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/game/score/calculate", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/game/score/calculate`;
            // TODO: edit the parameters of the request body.
            let body = {"cards": "list", "roomID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/rooms/create", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/rooms/create`;
            // TODO: edit the parameters of the request body.
            let body = {"maxCount": "integer", "minCount": "integer", "name": "string", "password": "string"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/rooms/join", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/rooms/join`;
            // TODO: edit the parameters of the request body.
            let body = {"password": "string", "roomID": "integer"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/game/card/ownership", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/game/card/ownership`;
            // TODO: edit the parameters of the request body.
            let body = {"cards": "list"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v0.1/game/start", () => {

        // Request No. 1: 
        {
            let url = BASE_URL + `/v0.1/game/start`;
            // TODO: edit the parameters of the request body.
            let body = {"roomID": "integer", "state": "string"};
            let params = {headers: {"Content-Type": "application/json", "tkn": `${tkn}`, "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

}
